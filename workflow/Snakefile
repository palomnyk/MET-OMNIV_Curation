# Author: Aaron Yerke (aaronyerke@gmail.com)
# Main snakemake file for running and re-running scripts
# TODO Debug rule that joins demo and metabolomics

configfile: "workflow/config/config.yaml"

import os
import pandas as pd

resp_colmns = ["beef_level", "TIMEPOINT"]
metabolomics_levels = ["chem", "sub_pathway","super_pathway"]
clean_sites = ["noMB_noMap"]#["PSU_MED", "MB_IIT", "Purdue", "USDA_MED", "noMap", "noMB_noMap"]
orgi_sites = ["PSU-MED", "MB/IIT", "Purdue", "USDA-MED"]
project_diet_prefix = ["", "mb-"]
metabolomics_transforms = ["","log-"]
rf_columns = ["PARENT_SAMPLE_NAME", "SITE", "TIMEPOINT","TREATMENT","controls","beef_level","beef_level_oz"]

nutri_dir = os.path.join("data", "diet", "nutrition_data")

rule completed:
	input:
# Nutrition data reorganization
		# os.path.join("data", "diet", "nutrition_data", "combined_esha_studies.tsv"),
		# expand("data/diet/nutrition_data/mb-{file}",\
		#    file=["HEI_with_proportions_long.tsv","HEI_with_proportions_long.xlsx", "HEI_with_proportions_long.tsv"]),
# no_map_chick_is_not_beef
		# expand("output/no_map_chick_is_not_beef/tables/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}_scores.csv", 
		# 	metblmcs_lev=metabolomics_levels),
		# expand("output/no_map_chick_is_not_beef/graphics/metabolites_Sankey-{metblmcs_lev}.html", 
		# 	 metblmcs_lev=metabolomics_levels),
		# expand("output/no_map_chick_is_not_beef/tables/shap_feat_imp_demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv",
		# metblmcs_lev=metabolomics_levels),
# Biomarker Rand Forest
		expand("output/no_map_auto_protein/tables/{clean_site}-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein_scores.csv",
		metblmcs_lev=metabolomics_levels,clean_site=clean_sites),
		# expand("output/no_map_auto_protein/tables/shap_feat_imp_demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein.csv",
		# metblmcs_lev=metabolomics_levels),
		#midpoint for exp sankey autoproten
		# "data/mapping/noMap_metadata_auto-pro_demo.csv",
		# expand("output/no_map_auto_protein/graphics/{clean_site}-metabolites_Sankey-auto_protein-{metblmcs_lev}.html",
		# metblmcs_lev=metabolomics_levels, clean_site=clean_sites),
		"output/no_map_auto_protein/graphics/demo_plots.pdf",
		"output/no_map_auto_protein/graphics/exp_org_Sankey.html",
# Random forest for CVD Markers
		expand("output/no_map_CVD/tables/{clean_site}-meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-CVD_scores.csv",
		metblmcs_lev=metabolomics_levels,clean_site=clean_sites)


rule combine_MB_dietary_to_single_table:
	conda:"env/python_conda_env.yml"
	input: "data/diet/mb/2112 Results.xlsx"
	output: "data/diet/nutrition_data/mb_2112_esha.tsv"
	shell:
		"""
		module load r
		Rscript scripts/harmonization/org_MB_dietary.R
		"""	
checkpoint correct_SR_ESHA_matches:
	input:
		"data/diet/nutrition_data/SR/hf_SR_best_matches_com LEO.xlsx",
		"data/diet/nutrition_data/best_matches/hf_SR_best_matches.xlsx"
	shell:
		"""
		Rscript scripts/harmonization/p5_correct_SR_ESHA_matches.R
		"""

rule imput_SRA_match:
	input:
		"data/diet/nutrition_data/HEI_with_proportions_long.xlsx",
		"data/diet/nutrition_data/SR/SR_food.csv"
	output:
		"data/diet/nutrition_data/best_matches/hf_SR_best_matches.xlsx"
	shell:
		"""
		Rscript scripts\harmonization\p4_imput_SRA_match_REST.py
		"""

rule automatic_label_proteins_USDA:
	input: expand("data/diet/nutrition_data/{file}",\
		   file=["HEI_conversion_table_LEO wide.xlsx",\
				 "esha_combined_meats_HEI_vals_LEO_noRed.xlsx"])
	output:
		expand("data/diet/nutrition_data/{file}",\
		   file=["HEI_with_proportions_long.tsv","HEI_with_proportions_long.xlsx"])
	shell:
		"""
		Rscript scripts/harmonization/p3_automatic_label_proteins.R
		"""

rule label_proteins_mb:
	input:
		conv = "data/diet/mb/mb-unique_esha_fped.tsv",
		diet = "data/diet/nutrition_data/mb-combined_esha_studies_HEI.tsv"
	output:
		"data/diet/nutrition_data/mb-esha_meats_FPED_vals.tsv",
	shell:
		"""
		module load r
		Rscript scripts/harmonization/p3.5_hand_label_proteins_mb.R\
			--FPED_conv {input.conv:q}\
			--out_prefix mb-
		"""

rule add_FPED_to_combined_ESHA_USDA:
	input:
		os.path.join("data", "diet", "nutrition_data", "HEI Pivot table_modified.xlsx"), 
		os.path.join("data", "diet", "nutrition_data", "combined_esha_studies.xlsx"),
	output:
		expand("data/diet/nutrition_data/{file}",\
		   file=["HEI_conversion_table_wide.tsv", "HEI_conversion_table.tsv",
		   "combined_esha_studies_HEI.tsv","HEI_missing_items.tsv"])
	shell:
		"""
		Rscript scripts/harmonization/p2_add_FPED_data.R
		"""

rule add_FPED_to_ESHA_MB:
	input:
		HEI_conv = "data/diet/nutrition_data/HEI Pivot table_modified.xlsx",
		diet = os.path.join("data", "diet", "nutrition_data", "mb_2112_esha.tsv"),
	output:
		expand("data/diet/nutrition_data/mb-{file}",\
		   file=["HEI_conversion_table_wide.tsv",
		   		"HEI_conversion_table_long.tsv","combined_esha_studies_HEI.tsv","HEI_missing_items.tsv"])
	shell:
		"""
		Rscript scripts/harmonization/p2_add_FPED_data.R\
			--HEI_conv {input.HEI_conv:q}\
			--input {input.diet:q}\
			--out_prefix mb-
		"""

rule combine_USDA_ESHA:
	input: os.path.join("data", "diet","map","MAP Study Complete ESHA Analysis Spreadsheet.xlsx"),
		   os.path.join("data", "diet","med","MED Diet Complete ESHA Analysis Spreadsheet.xlsx")
	output: os.path.join("data", "diet", "nutrition_data", "combined_esha_studies.tsv"),
			os.path.join("data", "diet", "nutrition_data", "combined_esha_studies.xlsx"),
	shell:
		"""
		Rscript scripts/harmonization/p1_build_ESHA_csv.R
		"""

rule organize_response_data_beef_only:
	input: "data/metabolomics/UARS-01-23ML+/UARS-01-23ML+ DATA TABLES (ALL SAMPLES).XLSX"
	output: "data/mapping/full_metadata.csv",
			"data/mapping/noMap_metadata.csv",
			"data/mapping/rf_noMap_metadata.csv"
	params:
	shell:
		"""
		Rscript scripts/data_org/org_metadata_beef_only.R
		"""

rule organize_metabolomics:
	input:
		"data/metabolomics/UARS-01-23ML+/UARS-01-23ML+ DATA TABLES (DATA ADJUSTED BY BASELINE SAMPLES FROM EACH SITE).xlsx",
	output: "data/metabolomics/filt_all_bat_norm_imput-{metblmcs_lev}.csv",
			"data/metabolomics/log-filt_all_bat_norm_imput-{metblmcs_lev}.csv"
	shell:
		"""
		Rscript scripts/data_org/org_mtbmcs-{wildcards.metblmcs_lev}.R
		"""

rule organize_demographics:
	input: 
		"data/metabolomics/UARS-01-23ML+/UARS-01-23ML+ DATA TABLES (ALL SAMPLES).XLSX",
		"data/mapping/PSU demo.xlsx",
		"data/mapping/USDA PSU Med Beef Data.xlsx",
		"data/diet/mb/2112 V3    .csv", 
		"data/diet/mb/2112 V2 .csv", 
		"data/mapping/mb/MB-2112_Screen and Rand.xlsx",
		"data/mapping/purdue/AY_sample_codebook 9.12.2024 Campbell data.xlsx",
	output: "data/mapping/full_demo.csv",
			"data/mapping/noMap_demo.csv"
	shell:
		"""
		Rscript scripts/data_org/org_demo_help.R
		"""

rule combine_metadata_demo:
	conda:"env/python_conda_env.yml"
	input:
		diet_org = "data/mapping/noMap_demo.csv",
		helper = "data/mapping/noMap-auto_protn_metadata.csv"
	output:
		"data/mapping/noMap-auto_protn_metadata-demo.csv"
	resources:
		runtime=60, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="16gb"
	shell:
		"""
		Rscript scripts/data_org/combine_2_csv.R\
			--first_path {input.diet_org}\
			--secnd_path {input.helper}\
			--out_path {output}\
			--id_var PARENT_SAMPLE_NAME
		"""

rule combine_auto_pro_demo:
	conda:"env/python_conda_env.yml"
	input:
		diet_org = "data/mapping/noMap_demo.csv",
		helper = "data/mapping/noMap-auto_protn_metadata.csv"
	output:
		"data/mapping/noMap_metadata_auto-pro_demo.csv"
	resources:
		runtime=60, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="16gb"
	shell:
		"""
		Rscript scripts/data_org/combine_2_csv.R\
			--first_path {input.diet_org}\
			--secnd_path {input.helper}\
			--out_path {output}\
			--id_var PARENT_SAMPLE_NAME
		"""

rule combine_metabol_demo:
	# conda:"env/python_conda_env.yml"
	input:
		diet_org = "data/metabolomics/log-filt_all_bat_norm_imput-{metblmcs_lev}.csv",
		helper = "data/mapping/noMap_demo.csv"
	output:
		"data/metabolomics/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv"
		# expand("data/metabolomics/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv", 
		#	 metblmcs_lev=metabolomics_levels)
	resources:
		runtime=60, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="16gb"
	shell:
		"""
		Rscript scripts/data_org/combine_2_csv.R\
			--first_path {input.diet_org}\
			--secnd_path {input.helper}\
			--out_path {output}\
			--id_var PARENT_SAMPLE_NAME
		"""

rule random_forest:
	input:
		predictor = "data/metabolomics/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv",
		response = "data/mapping/noMap-rf-auto_protn_metadata.csv"
	output:
		"output/no_map_chick_is_not_beef/tables/feat_imp_demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein.csv",
		"output/no_map_auto_chick_is_not_beef/tables/shap_feat_imp_demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein.csv"
		# "output/no_map/tables/1col{resp_col}!demo-log-filt_all_bat_norm_imput-{metblmcs_lev}_scores.csv"
	params:
		label = "demo-log-filt_all_bat_norm_imput-{metblmcs_lev}"
	resources:
		runtime=2880, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="100gb",
		partition="short"
	shell:
		"""
			python scripts/ml/random_forest.py \
				--pred_path {input.predictor} \
				--output_label {params.label} \
				--response_fn {input.response} \
				--out_folder no_map_chick_is_not_beef \
				--delimiter , \
				--title "{params.label}" \
				--id_var "PARENT_SAMPLE_NAME"
		"""

rule random_forest_auto_protein:
	input:
		response = "data/mapping/{clean_site}-rf_auto_protn_metadata.csv",
		predictor = "data/metabolomics/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv"
	output:
		"output/no_map_auto_protein/tables/{clean_site}-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein_scores.csv",
		"output/no_map_auto_protein/tables/shap_feat_imp_{clean_site}-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein.csv",
		"output/no_map_auto_protein/tables/feat_imp_{clean_site}-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein.csv"
	params:
		label = "{clean_site}-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein"
	resources:
		runtime=1000, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="100gb",
		partition="short"
	shell:
		"""
			python scripts/ml/random_forest.py \
				--pred_path {input.predictor} \
				--output_label {params.label} \
				--response_fn {input.response} \
				--out_folder no_map_auto_protein \
				--delimiter , \
				--title "{params.label}" \
				--id_var "PARENT_SAMPLE_NAME"
		"""
				# --response_col beef_level

rule plot_demo_data:
	input: "data/mapping/noMap_metadata_auto-pro_demo.csv"
	output:
		"output/no_map_auto_protein/graphics/demo_plots.pdf"
	params:
	resources:
		runtime=60, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="16gb"
	shell:
		"""
		   Rscript scripts/ds_descrip/demo_descr.R --data {input[0]} \
		   --output_fpath {output[0]}
		"""

rule exp_org_Sankey:#Sankey shows experimental organization
	input: "data/mapping/noMap-auto_protn_metadata.csv"
	output:
		"output/no_map_auto_protein/graphics/exp_org_Sankey.html"
	params:
	resources:
		runtime=60, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="16gb"
	shell:
		"""
		   Rscript scripts/ds_descrip/exp_org_Sankey.R --input {input[0]}\
		   		--output_dir no_map_auto_protein
		"""

rule comb_output_Sankey:#Compares top hits of feature importance for RF run
	conda:"env/python_conda_env.yml"
	input:
		"output/no_map_chick_is_not_beef/tables/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}_scores.csv"
	output:
		"output/no_map_chick_is_not_beef/graphics/metabolites_Sankey-{metblmcs_lev}.html"
	shell:
		"""
			Rscript scripts/ds_descrip/comb_output_Sankey.R\
				--featimp_path {input[0]}\
				--output_dir no_map_chick_is_not_beef\
				--out_name metabolites_Sankey-{wildcards.metblmcs_lev}.html

		
		"""

rule org_auto_protein_label_response_data:
	input: 
	# "data/metabolomics/UARS-01-23ML+/UARS-01-23ML+ DATA TABLES (ALL SAMPLES).XLSX",
		"data/diet/nutrition_data/esha_combined_meats_HEI_vals28Sep2023.tsv",
		"data/diet/nutrition_data/mb-esha_meats_FPED_vals.tsv",
		"data/mapping/mb/MB-2112_Screen and Rand.xlsx"
	output: 
		expand("data/mapping/{clean_site}-rf_auto_protn_metadata.csv", clean_site=clean_sites),
		expand("data/mapping/{clean_site}-auto_protn_metadata.csv", clean_site=clean_sites),
		"data/diet/nutrition_data/meat_total_participant.csv"
	params:
	shell:
		"""
		Rscript scripts/data_org/org_metadata_auto_protn.R
		"""


rule comb_output_Sankey_auto_label_protein:#Compares top hits of feature importance for RF run
	conda:"env/python_conda_env.yml"
	input:
		"output/no_map_auto_protein/tables/{clean_site}-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-auto_protein-auto_protein_scores.csv"
	output:
		"output/no_map_auto_protein/graphics/{clean_site}-metabolites_Sankey-auto_protein-{metblmcs_lev}.html"
	params:
		label = "auto_protein"
	shell:
		"""
			Rscript scripts/ds_descrip/comb_output_Sankey.R\
				--featimp_path {input[0]}\
				--output_dir no_map_auto_protein\
				--out_name metabolites_Sankey-auto_protein-{wildcards.metblmcs_lev}.html
		"""
				
rule PCA_plot_numeric_meats:#Compares top hits of feature importance for RF run
	conda:"env/python_conda_env.yml"
	input:
		"data/mapping/noMap-auto_protn_metadata.csv"
	output:
		"output/no_map_chick_is_not_beef/graphics/metabolites_Sankey-{metblmcs_lev}.html"
	shell:
		"""
			Rscript scripts/ds_descrip/comb_output_Sankey.R\
				--featimp_path {input[0]}\
				--output_dir no_map_chick_is_not_beef\
				--out_name metabolites_Sankey-{wildcards.metblmcs_lev}.html

		
		"""

rule random_forest_cvd:
	input:
		response = "data/CVD/modified/{clean_site}-rf_cvd_markers.csv",
		predictor = "data/metabolomics/meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv"
	output:
		"output/no_map_CVD/tables/{clean_site}-meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-CVD_scores.csv",
		"output/no_map_CVD/tables/shap_feat_imp_{clean_site}-meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-CVD.csv",
		"output/no_map_CVD/tables/feat_imp_{clean_site}-meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-CVD.csv"
	params:
		label = "{clean_site}-meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}-CVD"
	resources:
		runtime=1000, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="100gb",
		partition="short"
	shell:
		"""
			python scripts/ml/random_forest.py \
				--pred_path {input.predictor} \
				--output_label {params.label} \
				--response_fn {input.response} \
				--out_folder no_map_CVD \
				--delimiter , \
				--title "{params.label}" \
				--id_var "PARENT_SAMPLE_NAME"
		"""
				# --response_col beef_level

rule org_cvd_response_data:
	input: 
		"data/mapping/noMap-auto_protn_metadata.csv",
	output: 
		expand("data/CVD/modified/{clean_site}-rf_cvd_markers.csv", clean_site=clean_sites),
		expand("data/CVD/modified/{clean_site}-cvd_markers.csv", clean_site=clean_sites)
	params:
	shell:
		"""
		Rscript scripts/CVD_markers/org_CVD_marker.R
		"""

rule combine_metabol_demo_meat:
	# conda:"env/python_conda_env.yml"
	input:
		diet_org = "data/metabolomics/demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv",
		helper = "data/diet/nutrition_data/meat_total_participant.csv"
	output:
		"data/metabolomics/meat-demo-log-filt_all_bat_norm_imput-{metblmcs_lev}.csv"
	resources:
		runtime=60, #format: M, M:S, H:M:S, D-H, D-H:M, or D-H:M:S
		mem="16gb"
	shell:
		"""
		Rscript scripts/data_org/combine_2_csv.R\
			--first_path {input.diet_org}\
			--secnd_path {input.helper}\
			--out_path {output}\
			--id_var PARENT_SAMPLE_NAME
		"""